server {
    server_name clients.worklenz.com;

    root /home/cdsadmin/apps/worklenz-premium/worklenz-client-portal/dist;
    index index.html;

    error_page 500 501 502 503 504 403 /maintenance.html;

    client_max_body_size 100M;

    # Maintenance mode check
    if (-f /var/www/maintenance-mode) {
        return 503;
    }

    location = /maintenance.html {
        root /usr/share/nginx/html/;
        index maintenance.html;
        allow all;
    }

    # block for websockets
    location /socket {
        proxy_pass https://api.worklenz.com;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # API proxy
    location /api/ {
        proxy_pass https://api.worklenz.com/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Security headers
    location / {
        # CORS headers
        add_header 'Access-Control-Allow-Origin' 'https://api.worklenz.com' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CSRF-Token, X-XSRF-TOKEN' always;
        
        # Security headers
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Cache control for SPA
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;

        # SPA routing
        try_files $uri $uri/ /index.html;

        # Compression
        gzip_static on;
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_comp_level 6;
        gzip_min_length 1000;
        gzip_vary on;
    }

    location /test-error {
        return 500;
    }

    # Handle OPTIONS preflight requests
    if ($request_method = 'OPTIONS') {
        set $cors "true";
    }
}
