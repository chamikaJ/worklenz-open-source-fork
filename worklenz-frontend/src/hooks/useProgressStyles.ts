import { useMemo } from 'react';\nimport { ProgressProps } from '@/shared/antd-imports';\n\ntype WorkloadStatus = 'available' | 'normal' | 'fully-allocated' | 'overallocated';\n\ninterface UseProgressStylesProps {\n  percent: number;\n  status: WorkloadStatus;\n  size?: 'small' | 'default';\n  showInfo?: boolean;\n}\n\nexport const useProgressStyles = ({\n  percent,\n  status,\n  size = 'small',\n  showInfo = false\n}: UseProgressStylesProps): ProgressProps => {\n  const getStatusColor = useMemo(() => {\n    switch (status) {\n      case 'available': return '#52c41a'; // Green\n      case 'normal': return '#1890ff'; // Blue  \n      case 'fully-allocated': return '#faad14'; // Orange\n      case 'overallocated': return '#f5222d'; // Red\n      default: return '#d9d9d9'; // Gray\n    }\n  }, [status]);\n\n  const progressProps = useMemo((): ProgressProps => {\n    const safePercent = Math.min(Math.max(percent, 0), 100);\n    \n    return {\n      percent: safePercent,\n      size,\n      strokeColor: getStatusColor,\n      showInfo,\n      status: status === 'overallocated' ? 'exception' : undefined,\n      // Use trailColor for better contrast in dark mode\n      trailColor: 'rgba(0, 0, 0, 0.06)',\n    };\n  }, [percent, size, getStatusColor, showInfo, status]);\n\n  return progressProps;\n};\n\n// Hook for workload-specific progress styling\nexport const useWorkloadProgress = (utilizationPercent: number) => {\n  const status: WorkloadStatus = useMemo(() => {\n    if (utilizationPercent > 100) return 'overallocated';\n    if (utilizationPercent === 100) return 'fully-allocated';\n    if (utilizationPercent >= 75) return 'normal';\n    return 'available';\n  }, [utilizationPercent]);\n\n  return useProgressStyles({\n    percent: utilizationPercent,\n    status,\n  });\n};\n\n// Theme-aware progress colors\nexport const getThemeAwareProgressColors = (isDarkMode: boolean) => {\n  return {\n    available: isDarkMode ? '#73d13d' : '#52c41a',\n    normal: isDarkMode ? '#40a9ff' : '#1890ff',\n    'fully-allocated': isDarkMode ? '#ffec3d' : '#faad14',\n    overallocated: isDarkMode ? '#ff7875' : '#f5222d',\n    default: isDarkMode ? '#434343' : '#d9d9d9',\n  };\n};